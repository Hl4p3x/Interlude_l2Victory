package ru.j2dev.gameserver.network.lineage2.components;

/**
 * Created by JunkyFunky
 * on 16.01.2018 22:25
 * group j2dev
 */
public enum OutgoingPackets {

    AbnormalStatusUpdate(0x7F),
    AbnormalVisualEffect(0x9F),
    AcquireSkillDone(0x8E),
    AcquireSkillInfo(0x8B),
    AcquireSkillList(0x8A),
    ActionFail(0x25),
    AgitDecoInfo(0xF7),
    AllianceCrest(0xAE),
    AllianceInfo(0xB4),
    AskJoinAlliance(0xA8),
    AskJoinParty(0x39),
    AskJoinPledge(0x32),
    Attack(0x05),
    AttackDeadTarget(0x0A),
    AttackOutofRange(0x08),
    AttackinCoolTime(0x09),
    AutoAttackStart(0x2B),
    AutoAttackStop(0x2C),
    BlockList(0xC6),
    BuyList(0x11),
    BuyListSeed(0xE8),
    CameraMode(0xF1),
    CastleSiegeAttackerList(0xCA),
    CastleSiegeDefenderList(0xCB),
    CastleSiegeInfo(0xC9),
    ChairSit(0xE1),
    ChangeMoveType(0x2E),
    ChangeWaitType(0x2F),
    CharInfo(0x03),
    CharacterCreateFail(0x1A),
    CharacterCreateSuccess(0x19),
    CharacterDeleteFail(0x24),
    CharacterDeleteSuccess(0x23),
    CharacterSelected(0x15),
    CharacterSelectionInfo(0x13),
    ChooseInventoryItem(0x6F),
    ClientAction(0x89),
    ClientSetTime(0xEC),
    ConfirmDlg(0xED),
    CreatePledge(0x31),
    DeleteObject(0x12),
    DeleteRadar(0xA5),
    Dice(0xD4),
    Die(0x06),
    DismissAlliance(0xAC),
    DismissParty(0x3E),
    DismissPledge(0x37),
    DoorInfo(0x4C),
    DoorStatusUpdate(0x4D),
    DropItem(0x0C),
    Dummy_70(0x70),
    EarthQuake(0xC4),
    EnchantResult(0x81),
    EquipUpdate(0x4B),
    EtcStatusUpdate(0xF3),
    EventTrigger(0xCF),
    ExAskJoinMPCC(0xFE, 0x27),
    ExAskJoinPartyRoom(0xFE, 0x34),
    ExAutoSoulShot(0xFE, 0x12),
    ExCloseMPCC(0xFE, 0x26),
    ExClosePartyRoom(0xFE, 0x0F),
    ExColosseumFenceInfo(0xFE, 0x09),
    ExCursedWeaponList(0xFE, 0x45),
    ExCursedWeaponLocation(0xFE, 0x46),
    ExDuelAskStart(0xFE, 0x4B),
    ExDuelEnd(0xFE, 0x4E),
    ExDuelEnemyRelation(0xFE, 0x58),
    ExDuelReady(0xFE, 0x4C),
    ExDuelStart(0xFE, 0x4D),
    ExDuelUpdateUserInfo(0xFE, 0x4F),
    ExEnchantSkillInfo(0xFE, 0x18),
    ExEnchantSkillList(0xFE, 0x17),
    ExEventMatchCreate(0xFE, 0x07),
    ExEventMatchFirecracker(0xFE, 0x0B),
    ExEventMatchGMTest(0xFE, 0x0D),
    ExEventMatchList(0xFE, 0x02),
    ExEventMatchLockResult(0xFE, 0x11),
    ExEventMatchManage(0xFE, 0x2F),
    ExEventMatchMessage(0xFE, 0x04),
    ExEventMatchObserver(0xFE, 0x03),
    ExEventMatchScore(0xFE, 0x05),
    ExEventMatchSpelledInfo(0xFE, 0x0A),
    ExEventMatchTeamInfo(0xFE, 0x06),
    ExEventMatchTeamUnlocked(0xFE, 0x0C),
    ExEventMatchUserInfo(0xFE, 0x08),
    ExFishingEnd(0xFE, 0x14),
    ExFishingHpRegen(0xFE, 0x16),
    ExFishingStart(0xFE, 0x13),
    ExFishingStartCombat(0xFE, 0x15),
    ExGetBossRecord(0xFE, 0x33),
    ExHeroList(0xFE, 0x23),
    ExListPartyMatchingWaitingRoom(0xFE, 0x35),
    ExMPCCPartyInfoUpdate(0xFE, 0x5A),
    ExMPCCShowPartyMemberInfo(0xFE, 0x4A),
    ExMailArrived(0xFE, 0x2D),
    ExManagePartyRoomMember(0xFE, 0x10),
    ExMultiPartyCommandChannelInfo(0xFE, 0x30),
    ExNeedToChangeName(0xFE, 0x5C),
    ExOlympiadMatchEnd(0xFE, 0x2C),
    ExOlympiadMode(0xFE, 0x2B),
    ExOlympiadSpelledInfo(0xFE, 0x2A),
    ExOlympiadUserInfo(0xFE, 0x29),
    ExOpenMPCC(0xFE, 0x25),
    ExPCCafePointInfo(0xFE, 0x31),
    ExPartyRoomMember(0xFE, 0x0E),
    ExPlayAnimation(0xFE, 0x59),
    ExPlayScene(0xFE, 0x5B),
    ExPledgeEmblem(0xFE, 0x28),
    ExPutCommissionResultForVariationMake(0xFE, 0x54),
    ExPutIntensiveResultForVariationMake(0xFE, 0x53),
    ExPutItemResultForVariationCancel(0xFE, 0x56),
    ExPutItemResultForVariationMake(0xFE, 0x52),
    ExRedSky(0xFE, 0x40),
    ExRegenMax(0xFE, 0x01),
    ExRequestHackShield(0xFE, 0x48),
    ExRestartClient(0xFE, 0x47),
    ExSearchOrc(0xFE, 0x44),
    ExSendManorList(0xFE, 0x1B),
    ExServerPrimitive(0xFE, 0x24),
    ExSetCompassZoneCode(0xFE, 0x32),
    ExSetMpccRouting(0xFE, 0x36),
    ExShowAdventurerGuideBook(0xFE, 0x37),
    ExShowCropInfo(0xFE, 0x1D),
    ExShowCropSetting(0xFE, 0x20),
    ExShowManorDefaultInfo(0xFE, 0x1E),
    ExShowProcureCropDetail(0xFE, 0x22),
    ExShowQuestInfo(0xFE, 0x19),
    ExShowQuestMark(0xFE, 0x1A),
    ExShowScreenMessage(0xFE, 0x38),
    ExShowSeedInfo(0xFE, 0x1C),
    ExShowSeedSetting(0xFE, 0x1F),
    ExShowSellCropList(0xFE, 0x21),
    ExShowVariationCancelWindow(0xFE, 0x51),
    ExShowVariationMakeWindow(0xFE, 0x50),
    ExStorageMaxCount(0xFE, 0x2E),
    ExUseSharedGroupItem(0xFE, 0x49),
    ExVariationCancelResult(0xFE, 0x57),
    ExVariationResult(0xFE, 0x55),
    FinishRotating(0x63),
    FlySelfDestination(0xFE, 0x42),
    FlyToLocation(0xC5),
    FriendAdd(0x78),
    FriendAddRequest(0x7D),
    FriendAddRequestResult(0x77),
    FriendList(0x7A),
    FriendRemove(0x79),
    FriendStatus(0x7B),
    GMHennaInfo(0xEA),
    GMHide(0x8D),
    GMViewCharacterInfo(0x8F),
    GMViewItemList(0x94),
    GMViewMagicInfo(0x92),
    GMViewPledgeInfo(0x90),
    GMViewQuestInfo(0x93),
    GMViewSkillInfo(0x91),
    GMViewWarehouseWithdrawList(0x95),
    GameGuardQuery(0xF9),
    GetItem(0x0D),
    GetOffVehicle(0x5D),
    GetOnVehicle(0x5C),
    GiveNickNameDone(0x87),
    HennaEquipList(0xE2),
    HennaInfo(0xE4),
    HennaItemInfo(0xE3),
    HennaUnequipInfo(0xE6),
    HennaUnequipList(0xE5),
    InventoryUpdate(0x27),
    ItemList(0x1B),
    JoinAlliance(0xA9),
    JoinParty(0x3A),
    JoinPledge(0x33),
    L2Friend(0xFB),
    L2FriendList(0xFA),
    L2FriendSay(0xFD),
    L2FriendStatus(0xFC),
    ListPartyWaiting(0x96),
    LogOutOk(0x7E),
    LoginFail(0x14),
    MacroList(0xE7),
    MagicList(0x57),
    MagicSkillCanceled(0x49),
    MagicSkillLaunched(0x76),
    MagicSkillUse(0x48),
    ManagePledgePower(0x30),
    MonRaceInfo(0xDD),
    MoveToLocation(0x01),
    MoveToLocationInVehicle(0x71),
    MoveToPawn(0x60),
    MultiSellList(0xD0),
    MyTargetSelected(0xA6),
    NetPing(0xD3),
    NewCharacterFail(0x18),
    NewCharacterSuccess(0x17),
    NickNameChanged(0xCC),
    NormalCamera(0xC8),
    NpcHtmlMessage(0x0F),
    NpcInfo(0x16),
    NpcInfoPoly(0x16),
    NpcSay(0x02),
    ObserverEnd(0xE0),
    ObserverStart(0xDF),
    OustAllianceMemberPledge(0xAB),
    OustPartyMember(0x3C),
    OustPledgeMember(0x35),
    PackageSendableList(0xC3),
    PackageToList(0xC2),
    PartyMemberPosition(0xA7),
    PartyRoomInfo(0x97),
    PartySmallWindowAdd(0x4F),
    PartySmallWindowAll(0x4E),
    PartySmallWindowDelete(0x51),
    PartySmallWindowDeleteAll(0x50),
    PartySmallWindowUpdate(0x52),
    PartySpelled(0xEE),
    PetDelete(0xB6),
    PetInfo(0xB1),
    PetInventoryUpdate(0xB3),
    PetItemList(0xB2),
    PetStatusShow(0xB0),
    PetStatusUpdate(0xB5),
    PetitionVote(0xF6),
    PlaySound(0x98),
    PledgeCrest(0x6C),
    PledgeExtendedInfo(0x84),
    PledgeInfo(0x83),
    PledgePowerGradeList(0xFE, 0x3B),
    PledgeReceiveMemberInfo(0xFE, 0x3D),
    PledgeReceivePowerInfo(0xFE, 0x3C),
    PledgeReceiveSubPledgeCreated(0xFE, 0x3F),
    PledgeReceiveUpdatePower(0xFE, 0x41),
    PledgeReceiveWarList(0xFE, 0x3E),
    PledgeShowInfoUpdate(0x88),
    PledgeShowMemberListAdd(0x55),
    PledgeShowMemberListAll(0x53),
    PledgeShowMemberListDelete(0x56),
    PledgeShowMemberListDeleteAll(0x82),
    PledgeShowMemberListUpdate(0x54),
    PledgeSkillList(0xFE, 0x39),
    PledgeSkillListAdd(0xFE, 0x3A),
    PledgeStatusChanged(0xCD),
    PrivateStoreBuyList(0xB8),
    PrivateStoreBuyManageList(0xB7),
    PrivateStoreBuyMsg(0xB9),
    PrivateStoreSellList(0x9B),
    PrivateStoreSellManageList(0x9A),
    PrivateStoreSellMsg(0x9C),
    QuestList(0x80),
    RadarControl(0xEB),
    RecipeBookItemList(0xD6),
    RecipeItemMakeInfo(0xD7),
    RecipeShopItemInfo(0xDA),
    RecipeShopManageList(0xD8),
    RecipeShopMsg(0xDB),
    RecipeShopSellList(0xD9),
    RelationChanged(0xCE),
    ReplyStartAllianceWar(0xBD),
    ReplyStartPledgeWar(0x66),
    ReplyStopAllianceWar(0xBF),
    ReplyStopPledgeWar(0x68),
    ReplySurrenderPledgeWar(0x6A),
    RequestTimeCheck(0xBB),
    RestartResponse(0x5F),
    Revive(0x07),
    ReviveRequest(0x9E),
    Ride(0x86),
    SSQInfo(0xF8),
    SSQStatus(0xF5),
    Say2(0x4A),
    SellList(0x10),
    SellListProcure(0xE9),
    ServerClose(0x26),
    ServerCloseSocket(0xAF),
    ServerObjectInfo(0x8C),
    SetAllianceCrest(0xAD),
    SetDismissParty(0x3F),
    SetDismissPledge(0x38),
    SetOustPartyMember(0x3D),
    SetOustPledgeMember(0x36),
    SetPledgeCrest(0x6B),
    SetSummonRemainTime(0xD1),
    SetupGauge(0x6D),
    ShopPreviewInfo(0xF0),
    ShopPreviewList(0xEF),
    ShortBuffStatusUpdate(0xF4),
    ShortCutDelete(0x46),
    ShortCutInit(0x45),
    ShortCutRegister(0x44),
    ShowBoard(0x6E),
    ShowCalc(0xDC),
    ShowMinimap(0x9D),
    ShowPCCafeCouponShowUI(0xFE, 0x43),
    ShowRadar(0xA4),
    ShowTownMap(0xDE),
    ShowTutorialMark(0xA1),
    ShowXMasSeal(0xF2),
    SkillCoolTime(0xC1),
    SkillList(0x58),
    SkillRemainSec(0xD2),
    Snoop(0xD5),
    SocialAction(0x2D),
    SpawnItem(0x0B),
    SpecialCamera(0xC7),
    StartAllianceWar(0xBC),
    StartPledgeWar(0x65),
    StartRotating(0x62),
    StaticObject(0x99),
    StatusUpdate(0x0E),
    StopAllianceWar(0xBE),
    StopMove(0x47),
    StopMoveInVehicle(0x72),
    StopPledgeWar(0x67),
    SunRise(0x1C),
    SunSet(0x1D),
    SurrenderAllianceWar(0xC0),
    SurrenderPersonally(0x85),
    SurrenderPledgeWar(0x69),
    SystemMessage(0x64),
    TargetSelected(0x29),
    TargetUnselected(0x2A),
    TeleportToLocation(0x28),
    TradeDone(0x22),
    TradeOtherAdd(0x21),
    TradeOwnAdd(0x20),
    TradePressOtherOk(0x7C),
    TradePressOwnOk(0x75),
    TradeRequest(0x5E),
    TradeStart(0x1E),
    TradeStartOk(0x1F),
    TradeUpdate(0x74),
    TutorialCloseHtml(0xA3),
    TutorialEnableClientEvent(0xA2),
    TutorialShowHtml(0xA0),
    UserAck(0x40),
    UserInfo(0x04),
    ValidateLocation(0x61),
    ValidateLocationInVehicle(0x73),
    VehicleCheckLocation(0x5B),
    VehicleDeparture(0x5A),
    VehicleInfo(0x59),
    VehicleStart(0xBA),
    VersionCheck(0x00),
    WareHouseDepositList(0x41),
    WareHouseDone(0x43),
    WareHouseWithdrawList(0x42),
    WithdrawAlliance(0xAA),
    WithdrawalParty(0x3B),
    WithdrawalPledge(0x34);


    private final int _id1;
    private final int _id2;

    OutgoingPackets(int id1) {
        this(id1, -1);
    }

    OutgoingPackets(int id1, int id2) {
        _id1 = id1;
        _id2 = id2;
    }

    public int getFirstId() {
        return _id1;
    }

    public int getSecondId() {
        return _id2;
    }
}
