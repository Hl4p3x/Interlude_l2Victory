package ru.j2dev.gameserver.network.lineage2.serverpackets;

import ru.j2dev.gameserver.Config;
import ru.j2dev.gameserver.model.base.TeamType;
import ru.j2dev.gameserver.model.instances.NpcInstance;
import ru.j2dev.gameserver.model.items.Inventory;
import ru.j2dev.gameserver.model.pledge.Alliance;
import ru.j2dev.gameserver.model.pledge.Clan;
import ru.j2dev.gameserver.skills.effects.EffectCubic;
import ru.j2dev.gameserver.templates.npc.polymorphed.PolymorphedData;
import ru.j2dev.gameserver.utils.Location;

import java.util.ArrayList;
import java.util.List;

public class PolyMorphedNpcInfo extends L2GameServerPacket {

    private Inventory _inv;
    private int _mAtkSpd;
    private int _pAtkSpd;
    private int _runSpd;
    private int _walkSpd;
    private int _swimSpd;
    private int _flRunSpd;
    private int _flWalkSpd;
    private int _flyRunSpd;
    private int _flyWalkSpd;
    private Location _loc;
    private Location _fishLoc;
    private String _name;
    private String _title;
    private int _objId;
    private int _race;
    private int _sex;
    private int base_class;
    private int pvp_flag;
    private int karma;
    private int rec_have;
    private double moveAnimMod;
    private double atkAnimMod;
    private double col_radius;
    private double col_height;
    private int hair_style;
    private int hair_color;
    private int face;
    private int _abnormalEffect;
    private int _abnormalEffect2;
    private int clan_id;
    private int clan_crest_id;
    private int large_clan_crest_id;
    private int ally_id;
    private int ally_crest_id;
    private int class_id;
    private int _sit;
    private int _run;
    private int _combat;
    private int _dead;
    private int private_store;
    private int _enchant;
    private int _noble;
    private int _hero;
    private int _fishing;
    private int mount_type;
    private int plg_class;
    private int pledge_type;
    private int clan_rep_score;
    private int cw_level;
    private int mount_id;
    private int _nameColor;
    private int _title_color;
    private int _transform;
    private int _agathion;
    private List<EffectCubic> _cubics;
    private boolean _isPartyRoomLeader;
    private boolean _isFlying;
    private TeamType _team;

    public PolyMorphedNpcInfo(final NpcInstance polymorph) {
        if (polymorph == null) {
            System.out.println("PolyMorphedNpcInfo: polymorph is null!");
            Thread.dumpStack();
            return;
        }
        if (polymorph.isInvisible()) {
            return;
        }
        if (polymorph.isDeleted()) {
            return;
        }
        if (_loc == null) {
            _loc = polymorph.getLoc();
        }
        final PolymorphedData _polymorphedData = polymorph.getPolymorphedData();
        _objId = polymorph.getObjectId();
        _name = polymorph.getName();
        _title = polymorph.getTitle();
        _title_color = _polymorphedData.getRndTitleColor();
        final Clan clan = polymorph.getClan();
        final Alliance alliance = (clan == null) ? null : clan.getAlliance();
        clan_id = ((clan == null) ? 0 : clan.getClanId());
        clan_crest_id = ((clan == null) ? 0 : clan.getCrestId());
        large_clan_crest_id = ((clan == null) ? 0 : clan.getCrestLargeId());
        ally_id = ((alliance == null) ? 0 : alliance.getAllyId());
        ally_crest_id = ((alliance == null) ? 0 : alliance.getAllyCrestId());
        cw_level = 0;
        _enchant = Math.min(127, _polymorphedData.getWeaponEnchant());
        mount_id = 0;
        mount_type = 0;
        _inv = _polymorphedData.getInventory();
        _mAtkSpd = polymorph.getMAtkSpd();
        _pAtkSpd = polymorph.getPAtkSpd();
        moveAnimMod = polymorph.getMovementSpeedMultiplier();
        _runSpd = (int) (polymorph.getRunSpeed() / moveAnimMod);
        _walkSpd = (int) (polymorph.getWalkSpeed() / moveAnimMod);
        _flRunSpd = 0;
        _flWalkSpd = 0;
        _flyRunSpd = 0;
        _flyWalkSpd = 0;
        _swimSpd = polymorph.getSwimSpeed();
        _race = _polymorphedData.getRace();
        _sex = _polymorphedData.getSex();
        base_class = _polymorphedData.getClassId();
        pvp_flag = polymorph.getPvpFlag();
        karma = polymorph.getKarma();
        atkAnimMod = polymorph.getAttackSpeedMultiplier();
        col_radius = _polymorphedData.getCollisionRadius();
        col_height = _polymorphedData.getCollisionHeight();
        hair_style = _polymorphedData.getHairStyle();
        hair_color = _polymorphedData.getHairColor();
        face = _polymorphedData.getFace();
        clan_rep_score = 0;
        _sit = 1;
        _run = (polymorph.isRunning() ? 1 : 0);
        _combat = (polymorph.isInCombat() ? 1 : 0);
        _dead = (polymorph.isAlikeDead() ? 1 : 0);
        private_store = 0;
        _cubics = new ArrayList<>();
        _abnormalEffect = polymorph.getAbnormalEffect();
        _abnormalEffect2 = polymorph.getAbnormalEffect2();
        rec_have = _polymorphedData.getRecomHave();
        class_id = _polymorphedData.getClassId();
        _team = polymorph.getTeam();
        _noble = 0;
        _hero = _polymorphedData.getHero();
        _fishing = 0;
        _fishLoc = Location.EMPTY_LOCATION;
        _nameColor = _polymorphedData.getRndNameColor();
        plg_class = 0;
        pledge_type = 0;
        _transform = 0;
        _agathion = 0;
        _isPartyRoomLeader = false;
        _isFlying = false;
    }

    @Override
    protected final void writeImpl() {
        if (_objId == 0) {
            return;
        }
        writeC(0x3);
        writeD(_loc.x);
        writeD(_loc.y);
        writeD(_loc.z + Config.CLIENT_Z_SHIFT);
        writeD(_loc.h);
        writeD(_objId);
        writeS(_name);
        writeD(_race);
        writeD(_sex);
        writeD(base_class);

        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_DHAIR));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_HEAD));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_RHAND));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_LHAND));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_GLOVES));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_CHEST));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_LEGS));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_FEET));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_BACK));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_FACE));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_DHAIR));
        writeD(_inv.getPaperdollItemId(Inventory.PAPERDOLL_HAIR));

        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeD(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeD(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeH(0x00);
        writeD(pvp_flag);
        writeD(karma);
        writeD(_mAtkSpd);
        writeD(_pAtkSpd);
        writeD(pvp_flag);
        writeD(karma);
        writeD(_runSpd);
        writeD(_walkSpd);
        writeD(_swimSpd);
        writeD(_swimSpd);
        writeD(_flRunSpd);
        writeD(_flWalkSpd);
        writeD(_flyRunSpd);
        writeD(_flyWalkSpd);
        writeF(moveAnimMod);
        writeF(atkAnimMod);
        writeF(col_radius);
        writeF(col_height);
        writeD(hair_style);
        writeD(hair_color);
        writeD(face);
        writeS(_title);
        writeD(clan_id);
        writeD(clan_crest_id);
        writeD(ally_id);
        writeD(ally_crest_id);
        writeD(0x0);
        writeC(_sit);
        writeC(_run);
        writeC(_combat);
        writeC(_dead);
        writeC(0x0);
        writeC(mount_type);
        writeC(private_store);
        writeH(_cubics.size());
        _cubics.stream().mapToInt(cubic -> (cubic == null) ? 0 : cubic.getId()).forEach(this::writeH);
        writeC(_isPartyRoomLeader ? 0x1 : 0x0);
        writeD(_abnormalEffect);
        writeC(_isFlying ? 0x2 : 0x0);
        writeH(rec_have);
        writeD(mount_id);
        writeD(class_id);
        writeD(0);
        writeC(_enchant);
        writeC(_team.ordinal());
        writeD(large_clan_crest_id);
        writeC(_noble);
        writeC(_hero);
        writeC(_fishing);
        writeD(_fishLoc.x);
        writeD(_fishLoc.y);
        writeD(_fishLoc.z);
        writeD(_nameColor);
        writeD(_loc.h);
        writeD(plg_class);
        writeD(pledge_type);
        writeD(_title_color);
        writeD(cw_level);
        writeD(clan_rep_score);
        writeD(_transform);
        writeD(_agathion);
        writeD(0x1);
        writeD(_abnormalEffect2);
    }
}
